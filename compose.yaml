# Comments are provided throughout this file to help you get started.
# If you need more help, visit the Docker Compose reference guide at
# https://docs.docker.com/go/compose-spec-reference/

# Here the instructions define your application as a service called "server".
# This service is built from the Dockerfile in the current directory.
# You can add other services your application may depend on here, such as a
# database or a cache. For examples, see the Awesome Compose repository:
# https://github.com/docker/awesome-compose
services:
  api:
    build:
      context: .
    ports:
      - "8080:8080"
    depends_on:
      - redis
    networks:
      - spring


  redis:
    image: redis:6.2-alpine
    restart: always
    healthcheck:
      test: [ "CMD-SHELL", "redis-cli ping | grep PONG" ]
      interval: 1s
      timeout: 3s
      retries: 5
    command: [ "redis-server" ]
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: "256M"
    networks:
      - spring

  nginx:
    image: nginx:stable-alpine
    restart: always
    ports:
      - '80:80' # Public HTTP Port
      - '443:443' # Public HTTPS Port
      - '81:81' # Admin Web Port
    depends_on:
      - api
    networks:
      - spring
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
#      - ./certs/cert.pem:/etc/nginx/ssl/cert.pem:ro
#      - ./certs/privkey.pem:/etc/nginx/ssl/privkey.pem:ro


volumes:
  redis_data:
    driver: local

networks:
  spring:
    driver: bridge
